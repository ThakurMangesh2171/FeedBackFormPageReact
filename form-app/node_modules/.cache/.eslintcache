[{"/home/vassar/Mangesh_Thakur/Projects/form-project/form-app/src/index.js":"1","/home/vassar/Mangesh_Thakur/Projects/form-project/form-app/src/App.js":"2","/home/vassar/Mangesh_Thakur/Projects/form-project/form-app/src/reportWebVitals.js":"3","/home/vassar/Mangesh_Thakur/Projects/form-project/form-app/src/Form.js":"4"},{"size":535,"mtime":1698258940222,"results":"5","hashOfConfig":"6"},{"size":244,"mtime":1698259542449,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1698258940222,"results":"8","hashOfConfig":"6"},{"size":2524,"mtime":1698262188788,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1i95k6o",{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"/home/vassar/Mangesh_Thakur/Projects/form-project/form-app/src/index.js",[],[],"/home/vassar/Mangesh_Thakur/Projects/form-project/form-app/src/App.js",["24","25"],[],"\nimport './App.css';\n\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Form from './Form';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Form />\n    </div>\n  );\n}\n\nexport default App;\n","/home/vassar/Mangesh_Thakur/Projects/form-project/form-app/src/reportWebVitals.js",[],[],"/home/vassar/Mangesh_Thakur/Projects/form-project/form-app/src/Form.js",["26"],[],"import { Button, Rating, TextField, Typography } from '@mui/material'\nimport { blue } from '@mui/material/colors';\nimport React, { useState } from 'react'\n\nconst Form = () => {\n    const [formData, setFormData] = useState({\n        name: '',\n        phoneNumber: '',\n        rating: 0,\n        comments: ''\n    });\n\n    const handleChange = (field, value) => {\n        setFormData({\n            ...formData,\n            [field]: value\n        });\n    };\n\n    \n    const handleSubmit = () => {\n        // Convert formData to a JSON string\n        const jsonData = JSON.stringify(formData);\n\n        // Create a Blob containing the JSON data\n        const blob = new Blob([jsonData], { type: 'application/json' });\n\n        // Create a download link for the Blob\n        const url = URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = 'formData.json';\n        document.body.appendChild(a);\n\n        // Trigger a click event on the download link to start the download\n        a.click();\n\n        // Remove the download link from the document\n        document.body.removeChild(a);\n    };\n\n    return (\n        <div className='form'>\n            <Typography  style={{ fontWeight: 300 }} component=\"legend\" className='heading' fontSize={40} >Sustainable Impact Feedback Form</Typography>\n            <TextField\n                id=\"name\"\n                label=\"Name\"\n                variant=\"outlined\"\n                onChange={(e) => handleChange('name', e.target.value)}\n            />\n            <TextField\n                id=\"phoneNumber\"\n                label=\"Phone Number\"\n                variant=\"outlined\"\n                onChange={(e) => handleChange('phoneNumber', e.target.value)}\n            />\n\n            <Typography component=\"legend\">How do you rate our service:</Typography>\n            <Rating\n        \n                name=\"simple-controlled\"\n                value={formData.rating}\n                onChange={(_, newValue) => handleChange('rating', newValue)}\n                style={{ color: '#0099FF' }} // Set the color to blue\n            />\n\n            <TextField\n                id=\"comments\"\n                label=\"Comments\"\n                variant=\"outlined\"\n                multiline\n                rows={4}\n                onChange={(e) => handleChange('comments', e.target.value)}\n            />\n\n            <Button variant=\"contained\" onClick={(e) => handleSubmit(e)}>SUBMIT</Button>\n        </div>\n    );\n}\n\nexport default Form;\n",{"ruleId":"27","severity":1,"message":"28","line":4,"column":8,"nodeType":"29","messageId":"30","endLine":4,"endColumn":11},{"ruleId":"27","severity":1,"message":"31","line":5,"column":8,"nodeType":"29","messageId":"30","endLine":5,"endColumn":17},{"ruleId":"27","severity":1,"message":"32","line":2,"column":10,"nodeType":"29","messageId":"30","endLine":2,"endColumn":14},"no-unused-vars","'Box' is defined but never used.","Identifier","unusedVar","'TextField' is defined but never used.","'blue' is defined but never used."]